{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// 取得所有專案\nexport const fetchAllProjects = async token => {\n  const res = await axios.get(`${API_URL}/projects`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.data;\n};\n\n// 建立專案\nexport const createProject = async (projectData, token) => {\n  const res = await axios.post(`${API_URL}/projects`, projectData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.data;\n};\n\n// 取得單一專案\nexport const getProjectDetails = async (projectId, token) => {\n  const res = await axios.get(`${API_URL}/projects/${projectId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.data;\n};\n\n// 更新專案\nexport const updateProject = async (projectId, projectData, token) => {\n  const res = await axios.put(`${API_URL}/projects/${projectId}`, projectData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.data;\n};\n\n// 刪除專案\nexport const deleteProject = async (projectId, token) => {\n  const res = await axios.delete(`${API_URL}/projects/${projectId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.data;\n};\n\n// 新增備註(便條紙)\nexport const addNote = async (projectId, content, token) => {\n  const res = await axios.post(`${API_URL}/projects/${projectId}/notes`, {\n    content\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.data;\n};\n\n// 新增溝通訊息\nexport const addMessage = async (projectId, message, token) => {\n  const res = await axios.post(`${API_URL}/projects/${projectId}/messages`, {\n    message\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.data;\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","fetchAllProjects","token","res","get","headers","Authorization","data","createProject","projectData","post","getProjectDetails","projectId","updateProject","put","deleteProject","delete","addNote","content","addMessage","message"],"sources":["/Users/chenguanyu/Desktop/client/src/api/project.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// 取得所有專案\nexport const fetchAllProjects = async (token) => {\n  const res = await axios.get(`${API_URL}/projects`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  return res.data;\n};\n\n// 建立專案\nexport const createProject = async (projectData, token) => {\n  const res = await axios.post(`${API_URL}/projects`, projectData, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  return res.data;\n};\n\n// 取得單一專案\nexport const getProjectDetails = async (projectId, token) => {\n  const res = await axios.get(`${API_URL}/projects/${projectId}`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  return res.data;\n};\n\n// 更新專案\nexport const updateProject = async (projectId, projectData, token) => {\n  const res = await axios.put(`${API_URL}/projects/${projectId}`, projectData, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  return res.data;\n};\n\n// 刪除專案\nexport const deleteProject = async (projectId, token) => {\n  const res = await axios.delete(`${API_URL}/projects/${projectId}`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  return res.data;\n};\n\n// 新增備註(便條紙)\nexport const addNote = async (projectId, content, token) => {\n  const res = await axios.post(\n    `${API_URL}/projects/${projectId}/notes`,\n    { content },\n    {\n      headers: { Authorization: `Bearer ${token}` },\n    }\n  );\n  return res.data;\n};\n\n// 新增溝通訊息\nexport const addMessage = async (projectId, message, token) => {\n  const res = await axios.post(\n    `${API_URL}/projects/${projectId}/messages`,\n    { message },\n    {\n      headers: { Authorization: `Bearer ${token}` },\n    }\n  );\n  return res.data;\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,KAAK,IAAK;EAC/C,MAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,WAAW,EAAE;IACjDQ,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOC,GAAG,CAACI,IAAI;AACjB,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,WAAW,EAAEP,KAAK,KAAK;EACzD,MAAMC,GAAG,GAAG,MAAMP,KAAK,CAACc,IAAI,CAAC,GAAGb,OAAO,WAAW,EAAEY,WAAW,EAAE;IAC/DJ,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOC,GAAG,CAACI,IAAI;AACjB,CAAC;;AAED;AACA,OAAO,MAAMI,iBAAiB,GAAG,MAAAA,CAAOC,SAAS,EAAEV,KAAK,KAAK;EAC3D,MAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,aAAae,SAAS,EAAE,EAAE;IAC9DP,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOC,GAAG,CAACI,IAAI;AACjB,CAAC;;AAED;AACA,OAAO,MAAMM,aAAa,GAAG,MAAAA,CAAOD,SAAS,EAAEH,WAAW,EAAEP,KAAK,KAAK;EACpE,MAAMC,GAAG,GAAG,MAAMP,KAAK,CAACkB,GAAG,CAAC,GAAGjB,OAAO,aAAae,SAAS,EAAE,EAAEH,WAAW,EAAE;IAC3EJ,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOC,GAAG,CAACI,IAAI;AACjB,CAAC;;AAED;AACA,OAAO,MAAMQ,aAAa,GAAG,MAAAA,CAAOH,SAAS,EAAEV,KAAK,KAAK;EACvD,MAAMC,GAAG,GAAG,MAAMP,KAAK,CAACoB,MAAM,CAAC,GAAGnB,OAAO,aAAae,SAAS,EAAE,EAAE;IACjEP,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAC9C,CAAC,CAAC;EACF,OAAOC,GAAG,CAACI,IAAI;AACjB,CAAC;;AAED;AACA,OAAO,MAAMU,OAAO,GAAG,MAAAA,CAAOL,SAAS,EAAEM,OAAO,EAAEhB,KAAK,KAAK;EAC1D,MAAMC,GAAG,GAAG,MAAMP,KAAK,CAACc,IAAI,CAC1B,GAAGb,OAAO,aAAae,SAAS,QAAQ,EACxC;IAAEM;EAAQ,CAAC,EACX;IACEb,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAC9C,CACF,CAAC;EACD,OAAOC,GAAG,CAACI,IAAI;AACjB,CAAC;;AAED;AACA,OAAO,MAAMY,UAAU,GAAG,MAAAA,CAAOP,SAAS,EAAEQ,OAAO,EAAElB,KAAK,KAAK;EAC7D,MAAMC,GAAG,GAAG,MAAMP,KAAK,CAACc,IAAI,CAC1B,GAAGb,OAAO,aAAae,SAAS,WAAW,EAC3C;IAAEQ;EAAQ,CAAC,EACX;IACEf,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUJ,KAAK;IAAG;EAC9C,CACF,CAAC;EACD,OAAOC,GAAG,CAACI,IAAI;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}