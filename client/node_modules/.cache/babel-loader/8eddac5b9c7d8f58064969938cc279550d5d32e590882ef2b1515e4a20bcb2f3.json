{"ast":null,"code":"var _jsxFileName = \"/Users/chenguanyu/Desktop/yuniver_CRUD/client/src/pages/FlowChartEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport ReactFlow, { addEdge, MiniMap, Controls, Background } from 'react-flow-renderer';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = ['phase', 'task', 'subFlow', 'iterative', 'note'];\nconst AdvancedFlowChartEditor = () => {\n  _s();\n  const {\n    id: projectId\n  } = useParams(); // 從路由取得專案 ID\n  const token = localStorage.getItem('token');\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  // 取得流程圖資料並轉換為 React Flow 的 nodes 與 edges\n  useEffect(() => {\n    const fetchFlowChart = async () => {\n      try {\n        const res = await axios.get(`${API_URL}/projects/${projectId}/flowchart`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const flowChartData = res.data; // 預期格式：一個物件陣列\n        let loadedNodes = [];\n        let loadedEdges = [];\n        if (Array.isArray(flowChartData)) {\n          loadedNodes = flowChartData.map(item => ({\n            id: item.id || `${Math.random().toString(36).substr(2, 9)}`,\n            data: {\n              label: item.label || 'No Label',\n              type: item.type || 'task',\n              description: item.description || '',\n              extras: item.extras || [],\n              link: item.link || ''\n            },\n            position: item.position || {\n              x: Math.random() * 250,\n              y: Math.random() * 250\n            }\n          }));\n          // 依據每個物件的 children 欄位建立 edge (從 parent 連到 child)\n          flowChartData.forEach(item => {\n            if (item.children && Array.isArray(item.children)) {\n              item.children.forEach(childId => {\n                loadedEdges.push({\n                  id: `e${item.id}-${childId}`,\n                  source: item.id,\n                  target: childId\n                });\n              });\n            }\n          });\n        }\n        setNodes(loadedNodes);\n        setEdges(loadedEdges);\n      } catch (error) {\n        console.error('Failed to load flow chart:', error);\n      }\n    };\n    fetchFlowChart();\n  }, [projectId, API_URL, token]);\n\n  // 當點選節點時，設定 selectedNode 供側邊編輯\n  const onElementClick = (event, element) => {\n    if (element && element.data) {\n      setSelectedNode(element);\n    }\n  };\n\n  // 當側邊表單變動時，更新節點屬性\n  const handleNodeChange = e => {\n    if (!selectedNode) return;\n    const {\n      name,\n      value\n    } = e.target;\n    setNodes(nds => nds.map(node => {\n      if (node.id === selectedNode.id) {\n        return {\n          ...node,\n          data: {\n            ...node.data,\n            [name]: value\n          }\n        };\n      }\n      return node;\n    }));\n    setSelectedNode(prev => prev ? {\n      ...prev,\n      data: {\n        ...prev.data,\n        [name]: value\n      }\n    } : prev);\n  };\n\n  // 新增一個節點（初始為 task）\n  const addNewNode = () => {\n    const newId = `${Math.random().toString(36).substr(2, 9)}`;\n    const newNode = {\n      id: newId,\n      data: {\n        label: 'New Node',\n        type: 'task',\n        description: '',\n        extras: [],\n        link: ''\n      },\n      position: {\n        x: 100,\n        y: 100\n      }\n    };\n    setNodes(nds => [...nds, newNode]);\n  };\n\n  // 儲存流程圖：將 nodes 與 edges 轉換回 JSON 結構後送到後端\n  const saveFlowChart = async () => {\n    // 每個 node 轉換成物件，並依 edges 設定 children 陣列\n    const flowChartData = nodes.map(node => {\n      const children = edges.filter(e => e.source === node.id).map(e => e.target);\n      return {\n        id: node.id,\n        type: node.data.type,\n        label: node.data.label,\n        description: node.data.description,\n        extras: node.data.extras,\n        link: node.data.link,\n        position: node.position,\n        children\n      };\n    });\n    try {\n      await axios.put(`${API_URL}/projects/${projectId}/flowchart`, {\n        flowChart: flowChartData\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('Flow chart saved successfully!');\n    } catch (error) {\n      console.error('Failed to save flow chart:', error);\n      alert('Save failed');\n    }\n  };\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '80vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        border: '1px solid #ddd'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onElementClick: onElementClick,\n        onConnect: onConnect,\n        fitView: true,\n        children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewNode,\n          children: \"Add Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveFlowChart,\n          style: {\n            marginLeft: '10px'\n          },\n          children: \"Save Flow Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '300px',\n        padding: '10px',\n        borderLeft: '1px solid #ccc'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), selectedNode ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"type\",\n            value: selectedNode.data.type,\n            onChange: handleNodeChange,\n            children: nodeTypes.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: t,\n              children: t\n            }, t, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Label:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"label\",\n            value: selectedNode.data.label,\n            onChange: handleNodeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            value: selectedNode.data.description,\n            onChange: handleNodeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Link:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"link\",\n            value: selectedNode.data.link,\n            onChange: handleNodeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Extras (\\u4EE5\\u9017\\u865F\\u5206\\u9694):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"extras\",\n            value: selectedNode.data.extras.join(','),\n            onChange: e => {\n              const arr = e.target.value.split(',').map(s => s.trim()).filter(s => s);\n              handleNodeChange({\n                target: {\n                  name: 'extras',\n                  value: arr\n                }\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a node to edit its properties.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(AdvancedFlowChartEditor, \"JLBqbpeQKXzarvK8g8TBbnmPBC8=\", false, function () {\n  return [useParams];\n});\n_c = AdvancedFlowChartEditor;\nexport default AdvancedFlowChartEditor;\nvar _c;\n$RefreshReg$(_c, \"AdvancedFlowChartEditor\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","ReactFlow","addEdge","MiniMap","Controls","Background","axios","useParams","jsxDEV","_jsxDEV","nodeTypes","AdvancedFlowChartEditor","_s","id","projectId","token","localStorage","getItem","API_URL","process","env","REACT_APP_API_URL","nodes","setNodes","edges","setEdges","selectedNode","setSelectedNode","fetchFlowChart","res","get","headers","Authorization","flowChartData","data","loadedNodes","loadedEdges","Array","isArray","map","item","Math","random","toString","substr","label","type","description","extras","link","position","x","y","forEach","children","childId","push","source","target","error","console","onElementClick","event","element","handleNodeChange","e","name","value","nds","node","prev","addNewNode","newId","newNode","saveFlowChart","filter","put","flowChart","alert","onConnect","params","eds","style","display","height","flex","border","fitView","fileName","_jsxFileName","lineNumber","columnNumber","margin","onClick","marginLeft","width","padding","borderLeft","onChange","t","join","arr","split","s","trim","_c","$RefreshReg$"],"sources":["/Users/chenguanyu/Desktop/yuniver_CRUD/client/src/pages/FlowChartEditor.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport ReactFlow, { addEdge, MiniMap, Controls, Background } from 'react-flow-renderer';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nconst nodeTypes = ['phase', 'task', 'subFlow', 'iterative', 'note'];\n\nconst AdvancedFlowChartEditor = () => {\n  const { id: projectId } = useParams(); // 從路由取得專案 ID\n  const token = localStorage.getItem('token');\n  const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  // 取得流程圖資料並轉換為 React Flow 的 nodes 與 edges\n  useEffect(() => {\n    const fetchFlowChart = async () => {\n      try {\n        const res = await axios.get(`${API_URL}/projects/${projectId}/flowchart`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        const flowChartData = res.data; // 預期格式：一個物件陣列\n        let loadedNodes = [];\n        let loadedEdges = [];\n        if (Array.isArray(flowChartData)) {\n          loadedNodes = flowChartData.map(item => ({\n            id: item.id || `${Math.random().toString(36).substr(2, 9)}`,\n            data: { \n              label: item.label || 'No Label',\n              type: item.type || 'task',\n              description: item.description || '',\n              extras: item.extras || [],\n              link: item.link || ''\n            },\n            position: item.position || { x: Math.random() * 250, y: Math.random() * 250 },\n          }));\n          // 依據每個物件的 children 欄位建立 edge (從 parent 連到 child)\n          flowChartData.forEach(item => {\n            if (item.children && Array.isArray(item.children)) {\n              item.children.forEach(childId => {\n                loadedEdges.push({\n                  id: `e${item.id}-${childId}`,\n                  source: item.id,\n                  target: childId,\n                });\n              });\n            }\n          });\n        }\n        setNodes(loadedNodes);\n        setEdges(loadedEdges);\n      } catch (error) {\n        console.error('Failed to load flow chart:', error);\n      }\n    };\n    fetchFlowChart();\n  }, [projectId, API_URL, token]);\n\n  // 當點選節點時，設定 selectedNode 供側邊編輯\n  const onElementClick = (event, element) => {\n    if (element && element.data) {\n      setSelectedNode(element);\n    }\n  };\n\n  // 當側邊表單變動時，更新節點屬性\n  const handleNodeChange = (e) => {\n    if (!selectedNode) return;\n    const { name, value } = e.target;\n    setNodes((nds) =>\n      nds.map((node) => {\n        if (node.id === selectedNode.id) {\n          return {\n            ...node,\n            data: { ...node.data, [name]: value }\n          };\n        }\n        return node;\n      })\n    );\n    setSelectedNode(prev => prev ? { ...prev, data: { ...prev.data, [name]: value } } : prev);\n  };\n\n  // 新增一個節點（初始為 task）\n  const addNewNode = () => {\n    const newId = `${Math.random().toString(36).substr(2, 9)}`;\n    const newNode = {\n      id: newId,\n      data: { label: 'New Node', type: 'task', description: '', extras: [], link: '' },\n      position: { x: 100, y: 100 },\n    };\n    setNodes(nds => [...nds, newNode]);\n  };\n\n  // 儲存流程圖：將 nodes 與 edges 轉換回 JSON 結構後送到後端\n  const saveFlowChart = async () => {\n    // 每個 node 轉換成物件，並依 edges 設定 children 陣列\n    const flowChartData = nodes.map(node => {\n      const children = edges.filter(e => e.source === node.id).map(e => e.target);\n      return {\n        id: node.id,\n        type: node.data.type,\n        label: node.data.label,\n        description: node.data.description,\n        extras: node.data.extras,\n        link: node.data.link,\n        position: node.position,\n        children,\n      };\n    });\n    try {\n      await axios.put(`${API_URL}/projects/${projectId}/flowchart`, \n        { flowChart: flowChartData },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      alert('Flow chart saved successfully!');\n    } catch (error) {\n      console.error('Failed to save flow chart:', error);\n      alert('Save failed');\n    }\n  };\n\n  const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), []);\n\n  return (\n    <div style={{ display: 'flex', height: '80vh' }}>\n      {/* 左側：流程圖編輯區 */}\n      <div style={{ flex: 1, border: '1px solid #ddd' }}>\n        <ReactFlow\n          nodes={nodes}\n          edges={edges}\n          onElementClick={onElementClick}\n          onConnect={onConnect}\n          fitView\n        >\n          <MiniMap />\n          <Controls />\n          <Background />\n        </ReactFlow>\n        <div style={{ margin: '10px' }}>\n          <button onClick={addNewNode}>Add Node</button>\n          <button onClick={saveFlowChart} style={{ marginLeft: '10px' }}>Save Flow Chart</button>\n        </div>\n      </div>\n      {/* 右側：節點屬性編輯區 */}\n      <div style={{ width: '300px', padding: '10px', borderLeft: '1px solid #ccc' }}>\n        <h3>Edit Node</h3>\n        {selectedNode ? (\n          <div>\n            <div>\n              <label>Type:</label>\n              <select name=\"type\" value={selectedNode.data.type} onChange={handleNodeChange}>\n                {nodeTypes.map(t => (\n                  <option key={t} value={t}>{t}</option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label>Label:</label>\n              <input name=\"label\" value={selectedNode.data.label} onChange={handleNodeChange} />\n            </div>\n            <div>\n              <label>Description:</label>\n              <textarea name=\"description\" value={selectedNode.data.description} onChange={handleNodeChange} />\n            </div>\n            <div>\n              <label>Link:</label>\n              <input name=\"link\" value={selectedNode.data.link} onChange={handleNodeChange} />\n            </div>\n            <div>\n              <label>Extras (以逗號分隔):</label>\n              <input\n                name=\"extras\"\n                value={selectedNode.data.extras.join(',')}\n                onChange={(e) => {\n                  const arr = e.target.value.split(',').map(s => s.trim()).filter(s => s);\n                  handleNodeChange({ target: { name: 'extras', value: arr } });\n                }}\n              />\n            </div>\n          </div>\n        ) : (\n          <p>Select a node to edit its properties.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AdvancedFlowChartEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}